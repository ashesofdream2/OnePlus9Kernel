name: Kernel Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    container: 
      image: archlinux:latest
      options: --privileged  # 需要特权模式用于内核编译

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Environment
      run: |
        pacman -Syu --noconfirm
        pacman -S --noconfirm \
          git curl wget tar zstd base-devel \
          python2 ccache clang lld llvm \
          lib32-ncurses lib32-readline lib32-zlib \
          ncurses5-compat-libs

    - name: Install AUR Helper
      run: |
        git clone https://aur.archlinux.org/yay.git
        cd yay
        makepkg -si --noconfirm
        cd ..
        rm -rf yay

    - name: Setup Build Environment
      run: |
        chmod +x build.sh
        ./build.sh setup_export

    - name: Sync Kernel Source
      run: |
        ./build.sh sync_source

    - name: Setup Dependencies
      run: |
        ./build.sh setup_environment

    - name: Configure Kernel Features
      run: |
        if [ "$CONFIG_KERNELSU" = "true" ]; then
          ./build.sh setup_kernelsu
        fi
        if [ "$CONFIG_DOCKER" = "true" ]; then
          ./build.sh docker_support
        fi
        if [ "$CONFIG_ROOTGUARD" = "true" ]; then
          ./build.sh compile_rootguard
        fi

    - name: Build Kernel
      run: |
        ./build.sh build_kernel

    - name: Create AnyKernel3 Zip
      run: |
        ./build.sh make_anykernel3_zip

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: kernel-builds
        path: |
          *.zip
          compile.log
        retention-days: 30

    - name: Clean Workspace
      if: always()
      run: |
        rm -rf ./*
