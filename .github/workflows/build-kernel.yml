name: Kernel Build

on:
  workflow_dispatch:
    inputs:
      device_name:
        description: '设备名称 (9P/9RT/LUNAA)'
        required: true
        default: 'LUNAA'
      enable_kernelsu:
        description: '启用 KernelSU'
        required: true
        default: 'true'
        type: boolean
      enable_docker:
        description: '启用 Docker 支持'
        required: true
        default: 'false'
        type: boolean
      enable_rootguard:
        description: '启用 RootGuard'
        required: true
        default: 'false'
        type: boolean
      lto_type:
        description: 'LTO 类型 (none/thin/full)'
        required: true
        default: 'full'
jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: 安装必要工具
        run: |
          sudo apt-get update
          sudo apt-get install -y systemd-container dbus socat openssh-client
          
      - name: 配置 systemd 环境
        run: |
          # 创建必要的目录
          sudo mkdir -p /run/systemd/system
          sudo touch /run/systemd/no-sysv-init
          
          # 启动 systemd 服务
          sudo systemctl start dbus
          sudo systemctl enable dbus
          
          # 验证 systemd 状态
          systemctl --version
          systemctl status dbus
          
          # 确认 PID 1 是 systemd
          ps -p 1
      
      - name: 安装 Arch Linux 工具链
        run: |
          # 如果你需要在 Ubuntu 中使用 Arch 的包管理器，可以使用 arch-install-scripts
          sudo apt-get install -y arch-install-scripts
          
          # 或者直接使用 Ubuntu 包管理器安装必要工具
          sudo apt-get install -y git wget curl python3
          
      - name: 安装 repo 工具
        run: |
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          echo "$HOME/bin" >> $GITHUB_PATH
          
      - name: 安装yay（使用root权限直接编译）
        run: |
          # 克隆yay仓库
          git clone https://aur.archlinux.org/yay.git
          cd yay
          
          # 直接使用root权限编译安装
          makepkg -si --noconfirm
          
          # 清理
          cd ..
          rm -rf yay

      
      - name: 克隆仓库
        uses: actions/checkout@v4
        with:
          path: source
      
      - name: 设置环境变量
        run: |
          echo "SOURCE_PATH=$(pwd)/source" >> $GITHUB_ENV
          echo "CLANG_PATH=$(pwd)/source/prebuilts-master/clang/host/linux-x86/clang-r450784d/" >> $GITHUB_ENV
          echo "CONFIG_KERNELSU=${{ github.event.inputs.enable_kernelsu }}" >> $GITHUB_ENV
          echo "KERNELSU_TAG=main" >> $GITHUB_ENV
          echo "CONFIG_DOCKER=${{ github.event.inputs.enable_docker }}" >> $GITHUB_ENV
          echo "CONFIG_ROOTGUARD=${{ github.event.inputs.enable_rootguard }}" >> $GITHUB_ENV
          echo "DEVICE_NAME=${{ github.event.inputs.device_name }}" >> $GITHUB_ENV
          echo "CONFIG_LTO=${{ github.event.inputs.lto_type }}" >> $GITHUB_ENV
      
      - name: 执行 build.sh 脚本
        run: |
          cd $SOURCE_PATH
          chmod +x build.sh
          ./build.sh
      
      - name: 查找并上传编译产物
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build-artifacts
          path: |
            $SOURCE_PATH/*.zip
            $SOURCE_PATH/compile.log
          retention-days: 7    
