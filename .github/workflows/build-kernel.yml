name: Kernel Build

on:
  workflow_dispatch:
    inputs:
      device_name:
        description: '设备名称 (9P/9RT/LUNAA)'
        required: true
        default: 'LUNAA'
      enable_kernelsu:
        description: '启用 KernelSU'
        required: true
        default: 'true'
        type: boolean
      enable_docker:
        description: '启用 Docker 支持'
        required: true
        default: 'false'
        type: boolean
      enable_rootguard:
        description: '启用 RootGuard'
        required: true
        default: 'false'
        type: boolean
      lto_type:
        description: 'LTO 类型 (none/thin/full)'
        required: true
        default: 'full'

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:base-devel
      options: --privileged

    steps:
      - name: 安装基础工具和 SSH 客户端
        run: |
          pacman -Syu --noconfirm
          pacman -S git wget curl python3 openssh --noconfirm
          
      - name: 安装 repo 工具
        run: |
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          echo "$HOME/bin" >> $GITHUB_PATH
          
      - name: 安装 yay
        run: |
          useradd -m builder
          echo 'builder ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
          sudo -u builder git clone https://aur.archlinux.org/yay.git /home/builder/yay
          cd /home/builder/yay
          sudo -u builder makepkg -si --noconfirm
          rm -rf /home/builder/yay
      
      - name: 克隆仓库
        uses: actions/checkout@v4
        with:
          path: source
      
      - name: 设置环境变量
        run: |
          echo "SOURCE_PATH=$(pwd)/source" >> $GITHUB_ENV
          echo "CLANG_PATH=$(pwd)/source/prebuilts-master/clang/host/linux-x86/clang-r450784d/" >> $GITHUB_ENV
          echo "CONFIG_KERNELSU=${{ github.event.inputs.enable_kernelsu }}" >> $GITHUB_ENV
          echo "KERNELSU_TAG=main" >> $GITHUB_ENV
          echo "CONFIG_DOCKER=${{ github.event.inputs.enable_docker }}" >> $GITHUB_ENV
          echo "CONFIG_ROOTGUARD=${{ github.event.inputs.enable_rootguard }}" >> $GITHUB_ENV
          echo "DEVICE_NAME=${{ github.event.inputs.device_name }}" >> $GITHUB_ENV
          echo "CONFIG_LTO=${{ github.event.inputs.lto_type }}" >> $GITHUB_ENV
      
      - name: 执行 build.sh 脚本
        run: |
          cd $SOURCE_PATH
          chmod +x build.sh
          ./build.sh
      
      - name: 查找并上传编译产物
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build-artifacts
          path: |
            $SOURCE_PATH/*.zip
            $SOURCE_PATH/compile.log
          retention-days: 7    
